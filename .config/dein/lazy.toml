[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_source = '''
  "Ctrl+Kにターゲットジャンプ割当
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  "imap <expr><TAB> pumvisible() ? "\<C-n>" : neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
  smap <expr><TAB> neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
  imap <expr><CR> neosnippet#expandable() ?
      \ "\<Plug>(neosnippet_expand)" :
      \ pumvisible() ? "\<C-y>" : "\<CR>\<Plug>DiscretionaryEnd"
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]] # unite.vim 後継
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_post_source = '''
    " file_rec
    if executable('pt')
        call denite#custom#var('file_rec', 'command', ['pt', '--follow', '--nocolor', '--nogroup', '--hidden', '-g', ''])
    endif

    " grep
    if executable('pt')
        call denite#custom#var('grep', 'command', ['pt', '--nogroup', '--nocolor', '--smart-case', '--hidden'])
        call denite#custom#var('grep', 'default_opts', [])
        call denite#custom#var('grep', 'recursive_opts', [])
    endif

    call denite#custom#source('file_mru', 'matchers', ['matcher_fuzzy', 'matcher_project_files'])
    call denite#custom#source('file_mru', 'converters', ['converter_relative_word'])
'''
hook_add = '''
    " Deniteの設定
    nnoremap [denite] <Nop>
    nmap <space> [denite]

    " -buffer-name=
    nnoremap <silent> [denite]g  :<C-u>Denite grep -buffer-name=search-buffer-denite<CR>

    " Denite grep検索結果を再表示する
    nnoremap <silent> [denite]r :<C-u>Denite -resume -buffer-name=search-buffer-denite<CR>
    " resumeした検索結果の次の行の結果へ飛ぶ
    nnoremap <silent> [denite]n :<C-u>Denite -resume -buffer-name=search-buffer-denite -select=+1 -immediately<CR>
    " resumeした検索結果の前の行の結果へ飛ぶ
    nnoremap <silent> [denite]p :<C-u>Denite -resume -buffer-name=search-buffer-denite -select=-1 -immediately<CR>   " key-binds
    nnoremap <silent> [denite]u :<C-u>Denite file_mru<CR>
    nnoremap <silent> [denite]t :<C-u>Denite filetype<CR>
    nnoremap <silent> [denite]p :<C-u>Denite file_rec<CR>
    nnoremap <silent> [denite]l :<C-u>Denite line<CR>
    nnoremap <silent> [denite]g :<C-u>Denite grep<CR>
    nnoremap <silent> [denite]y :<C-u>Denite neoyank<CR>
    nnoremap <silent> [denite]r :<C-u>Denite register<CR>
    nnoremap <silent> [denite]: :<C-u>Denite command_history -default-action=edit_and_execute<CR>
    nnoremap <silent> [denite]/ :<C-u>Denite history:search<CR>
    nnoremap <silent> [denite]j :<C-u>Denite junkfile:new junkfile<CR>
'''

[[plugins]] # Codic
repo = 'koron/codic-vim'
on_cmd = 'Codic'

[[plugins]] # Emmet
repo = 'mattn/emmet-vim'
on_i = 1
hook_source = '''
  let g:user_emmet_mode = 'i'
  let g:user_emmet_leader_key='<C-E>'
  let g:use_emmet_complete_tag = 1
  let g:user_emmet_settings = {
    \'variables': {
    \  'lang': "ja"
    \},
    \'indentation': '  '
    \}
'''

[[plugins]] # EditorConfig
repo = 'editorconfig/editorconfig-vim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_if = 1
on_event = 'TextYankPost'
on_source = ['denite.nvim']
